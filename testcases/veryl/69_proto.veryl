module Module69::<T: Proto69> {
    inst i: Interface69;
    inst u: T (
        a: 0,
        b: 0,
        c: _,
        d: i,
    );
}

proto module Proto69 #(
    param A      : u32,
    param B      : u32,
    param C      : u32,
    const A_WIDTH: u32,
    const B_WIDTH: u32,
    const C_WIDTH: u32,
) (
    a: input   logic            <A_WIDTH>,
    b: input   logic            <B_WIDTH>,
    c: output  logic            <C_WIDTH>,
    d: modport Interface69::port         ,
);

module Module69A for Proto69 #(
    param A      : u32 = 2        ,
    param B      : u32 = 3        ,
    param C      : u32 = 4        ,
    const A_WIDTH: u32 = $clog2(A),
    const B_WIDTH: u32 = $clog2(B),
    const C_WIDTH: u32 = $clog2(C),
) (
    a: input   logic            <A_WIDTH>,
    b: input   logic            <B_WIDTH>,
    c: output  logic            <C_WIDTH>,
    d: modport Interface69::port         ,
) {
    assign c = a;
}

package Package69A {
    struct A {
        a: logic,
    }
}

proto package ProtoPackage69B {
    type A = Package69A::A;
}

package Package69B for ProtoPackage69B {
    type A = Package69A::A;
}

interface Interface69 {
    modport port {


    }
}
