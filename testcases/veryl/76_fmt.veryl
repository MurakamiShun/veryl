module Module76 {
    #[fmt(compact)]
    inst u0: Module76A #( A: 1, B: 2 ) ( x: 1, y: _ );

    #[fmt(compact)]
    {
        inst u1: Module76A #( A: 1, B: 2 ) ( x: 1, y: _ );
        inst u2: Module76A #( A: 1, B: 2 ) ( x: 1, y: _ );
        inst u3: Module76A #( A: 1, B: 2 ) ( x: 1, y: _ );
        inst u4: Module76A #( A: 1, B: 2 ) ( x: 1, y: _ );
    }

    let a: logic = 1;
    #[fmt(compact)]
    let _b: logic = if a == 1 { 128'h11111111111111111111 } else if a == 2 { 128'h22222222222222222222 } else if a == 3 { 128'h33333333333333333333 } else { 128'h44444444444444444444 };
}

module Module76A #(
    param A: u32 = 1,
    param B: u32 = 1,
) (
    x: input  logic,
    y: output logic,
) {
    assign y = x;
}
