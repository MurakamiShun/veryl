package Package56A {
    const X: u32 = 1;
}

package Package56B {
    const X: u32 = 2;
}

proto package ProtoPackage56 {
    type A;
}

package Package56C for ProtoPackage56 {
    type A = StructA;

    struct StructA {
        a: logic,
        b: logic,
    }
}

module Module56 (
    x0: modport Interface56D::<Package56C::StructA>::X,
    x1: modport Interface56E::<Package56C>::X         ,
) {
    import Package56A::X;

    inst u_a0: Interface56A::<Package56A::X>;
    inst u_a1: Interface56A::<Package56B::X>;
    inst u_b0: Interface56B::<Package56A::X>;
    inst u_b1: Interface56B::<Package56A::X>;

    inst u_b2: Interface56B::<>;
    inst u_b3: Interface56B::<X>;
    inst u_a2: Module56A::<1>;

    inst u_c0: Module56C::<Interface56C::<2>>;

    inst u_d0: Interface56D::<Package56C::StructA>;
    inst u_d1: Interface56E::<Package56C>;

    let _a: logic = u_a0._a;
    let _b: logic = u_b0._b;
    let _c: logic = u_b3._b;
    let _d: logic = x0._b.a;
    let _e: logic = x1._b.a;
    let _f: logic = u_d0._b.a;
    let _g: logic = u_d1._b.a;
}

module Module56A::<T: u32> {
    inst u: Interface56A::<T>;
    function f () {}
}

/// Generic interface test for doc comment
pub interface Interface56A::<T: u32> {
    var _a: logic<T>;
}

/// Generic interface test for doc comment
pub interface Interface56B::<T: u32 = 3> {
    var _b: logic<T>;
}

proto interface ProtoInterface56C {
    const C_WIDTH: u32;

    var _c: logic<C_WIDTH>;
}

interface Interface56C::<W: u32> for ProtoInterface56C {

    const C_WIDTH: u32 = W;

    var _c: logic<C_WIDTH>;
}

module Module56C::<IF: ProtoInterface56C> {
    inst u: IF;
}

pub interface Interface56D::<T: type> {
    var _b: T;

    modport X {
        _b: input,
    }
}

pub interface Interface56E::<T: ProtoPackage56> {
    var _b: T::A;

    modport X {
        _b: input,
    }
}
