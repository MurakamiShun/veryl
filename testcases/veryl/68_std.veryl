module Module68A (
    i_clk : input  clock   ,
    i_rst : input  reset   ,
    i_push: input  logic   ,
    i_data: input  logic<8>,
    i_pop : input  logic   ,
    o_data: output logic<8>,
) {
    inst u: $std::fifo (
        i_clk            ,
        i_rst            ,
        i_clear      : '0,
        o_empty      : _ ,
        o_almost_full: _ ,
        o_full       : _ ,
        o_word_count : _ ,
        i_push           ,
        i_data           ,
        i_pop            ,
        o_data           ,
    );
}

module Module68B::<AXI4_PKG: $std::axi4_prototype, AXI4_LITE_PKG: $std::axi4_lite_prototype> (
    axi4_if     : modport $std::axi4_if::<AXI4_PKG>::slave          ,
    axi4_lite_if: modport $std::axi4_lite_if::<AXI4_LITE_PKG>::slave,
) {
    connect axi4_if      <> 0;
    connect axi4_lite_if <> 0;
}

alias package axi_pkg = $std::axi4_pkg::<32, 8, 8, 8, 8, 8, 8, 8>;
alias package axi_lite_pkg = $std::axi4_lite_pkg::<axi_pkg::ADDRESS_WIDTH, axi_pkg::DATA_WIDTH_BYTES, axi_pkg::ID_LENGTH>;

module Module68C {
    inst axi4_if            : $std::axi4_if::<axi_pkg>;
    inst axi4_lite_if       : $std::axi4_lite_if::<axi_lite_pkg>;
    connect axi4_if.master      <> 0;
    connect axi4_lite_if.master <> 0;

    inst u: Module68B::<axi_pkg, axi_lite_pkg> (
        axi4_if     : axi4_if     ,
        axi4_lite_if: axi4_lite_if,
    );
}
